diff -r df3c1150dd7a content/base/src/nsCopySupport.cpp
--- a/content/base/src/nsCopySupport.cpp	Sat Jan 08 00:48:44 2011 -0800
+++ b/content/base/src/nsCopySupport.cpp	Tue Jan 18 15:31:17 2011 +0100
@@ -436,7 +436,7 @@
   // copy it properly (all the copy code for non-plaintext assumes using HTML
   // serializers and parsers is OK, and those mess up XHTML).
   nsCOMPtr<nsIHTMLDocument> htmlDoc = do_QueryInterface(aDoc);
-  if (!(htmlDoc && aDoc->IsHTML()))
+  if (!htmlDoc)
     *aIsPlainTextContext = PR_TRUE;
 
   return NS_OK;
diff -r df3c1150dd7a content/base/src/nsDocumentEncoder.cpp
--- a/content/base/src/nsDocumentEncoder.cpp	Sat Jan 08 00:48:44 2011 -0800
+++ b/content/base/src/nsDocumentEncoder.cpp	Tue Jan 18 15:31:17 2011 +0100
@@ -1333,7 +1333,7 @@
   
   // also consider ourselves in a text widget if we can't find an html document
   nsCOMPtr<nsIHTMLDocument> htmlDoc = do_QueryInterface(mDocument);
-  if (!(htmlDoc && mDocument->IsHTML()))
+  if (!htmlDoc)
     mIsTextWidget = PR_TRUE;
   
   // normalize selection if we are not in a widget
diff -r df3c1150dd7a content/base/src/nsXHTMLContentSerializer.cpp
--- a/content/base/src/nsXHTMLContentSerializer.cpp	Sat Jan 08 00:48:44 2011 -0800
+++ b/content/base/src/nsXHTMLContentSerializer.cpp	Tue Jan 18 15:31:17 2011 +0100
@@ -897,6 +897,8 @@
       name == nsGkAtoms::noframes
       ) {
     mPreLevel++;
+    if (name != nsGkAtoms::pre)
+      ++mDisableEntityEncoding;
   }
 }
 
@@ -915,6 +917,8 @@
       name == nsGkAtoms::noframes
     ) {
     --mPreLevel;
+    if (name != nsGkAtoms::pre)
+      --mDisableEntityEncoding;
   }
 }
 
@@ -1034,3 +1038,4 @@
 
   return PR_TRUE;
 }
+
diff -r df3c1150dd7a editor/libeditor/html/nsHTMLDataTransfer.cpp
--- a/editor/libeditor/html/nsHTMLDataTransfer.cpp	Sat Jan 08 00:48:44 2011 -0800
+++ b/editor/libeditor/html/nsHTMLDataTransfer.cpp	Tue Jan 18 15:31:17 2011 +0100
@@ -1386,7 +1386,8 @@
                                      aSourceDoc,
                                      aDestinationNode, aDestOffset,
                                      aDoDeleteSelection,
-                                     isSafe);
+                                     //isSafe);
+                                     true);
       }
     }
     else if (0 == nsCRT::strcmp(bestFlavor, kUnicodeMime) ||
