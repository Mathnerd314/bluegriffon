<?xml version="1.0"?>

<!-- ***** BEGIN LICENSE BLOCK *****
   - Version: MPL 1.1/GPL 2.0/LGPL 2.1
   -
   - The contents of this file are subject to the Mozilla Public License Version
   - 1.1 (the "License"); you may not use this file except in compliance with
   - the License. You may obtain a copy of the License at
   - http://www.mozilla.org/MPL/
   -
   - Software distributed under the License is distributed on an "AS IS" basis,
   - WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
   - for the specific language governing rights and limitations under the
   - License.
   -
   - The Original Code is Composer.
   -
   - The Initial Developer of the Original Code is
   - Disruptive Innovations SARL.
   - Portions created by the Initial Developer are Copyright (C) 2006
   - the Initial Developer. All Rights Reserved.
   -
   - Contributor(s):
   -   Daniel Glazman (daniel.glazman@disruptive-innovations.com), Original Author
   -
   - Alternatively, the contents of this file may be used under the terms of
   - either the GNU General Public License Version 2 or later (the "GPL"), or
   - the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
   - in which case the provisions of the GPL or the LGPL are applicable instead
   - of those above. If you wish to allow use of your version of this file only
   - under the terms of either the GPL or the LGPL, and not to allow others to
   - use your version of this file under the terms of the MPL, indicate your
   - decision by deleting the provisions above and replace them with the notice
   - and other provisions required by the LGPL or the GPL. If you do not delete
   - the provisions above, a recipient may use your version of this file under
   - the terms of any one of the MPL, the GPL or the LGPL.
   -
   - ***** END LICENSE BLOCK ***** -->

<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
<?xml-stylesheet href="chrome://cssproperties/skin/cssproperties.css" type="text/css"?>
<?xml-stylesheet href="chrome://bluegriffon/skin/listboxBg.css" type="text/css"?>
<?xml-stylesheet href="chrome://bluegriffon/skin/bluegriffonDialogs.css" type="text/css"?>

<!DOCTYPE page [
  <!ENTITY % composerOverlayDTD SYSTEM "chrome://cssproperties/locale/cssproperties.dtd">
  %composerOverlayDTD;
  <!ENTITY % backgrounditemDTD SYSTEM "chrome://cssproperties/locale/backgrounditem.dtd" >
  %backgrounditemDTD;
]>

<page id         = "cssproperties"
      xmlns      = "http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
      xmlns:html = "http://www.w3.org/1999/xhtml"
      onload     = "Startup()"
      onunload   = "Shutdown()">

  <script type="application/x-javascript"  src="chrome://bluegriffon/content/utils/dgid.js"/>
  <script type="application/x-javascript"  src="chrome://bluegriffon/content/utils/global.js"/>
  <script type="application/x-javascript"  src="chrome://bluegriffon/content/utils/prompter.js"/>
  <script type="application/x-javascript"  src="chrome://bluegriffon/content/txns/diStyleAttrChangeTxn.js"/>
  <script type="application/x-javascript"  src="chrome://bluegriffon/content/txns/diChangeFileStylesheetTxn.js"/>
  <script type="application/x-javascript"  src="chrome://cssproperties/content/cssproperties.js"/>

  <stringbundle id="csspropertiesBundle"   src="chrome://cssproperties/locale/cssproperties.properties"/>
  <stringbundle id="backgrounditemBundle"  src="chrome://cssproperties/locale/backgrounditem.properties"/>

  <panelset>
    <popup id="sectionHeaderContext">
      <menuitem label="&closeOtherSections.label;" oncommand="CloseAllSection(false)"/>
      <menuitem label="&closeAllSections.label;" oncommand="CloseAllSection(true)"/>
    </popup>

    <panel level="floating" id="backgroundImagePanel" noautohide="true">
      <groupbox style="width: 400px">
		    <caption label="&imageURL.caption;"/>
		    <hbox align="center">
		      <textbox flex="1" id="imageURLTextbox"
		               oninput="LoadImage()"/>
		      <filepickerbutton id="filepickerbutton"
		                        control="imageURLTextbox"
		                        mode="0"
		                        filters="filterImages"
		                        oncommand="LoadImage();"
		                        title="&selectImageButton.label;"/>
	      </hbox>
      </groupbox>
      <groupbox>
        <caption label="&preview.caption;"/>
        <hbox align="center">
          <spacer flex="1"/>
          <vbox id="previewBackgroundImage"/>
          <spacer flex="1"/>
        </hbox>
      </groupbox>
      <hbox align="center">
        <spacer flex="1"/>
        <button label="&okButton.label;" oncommand="BackgroundImageSelected()"/>
      </hbox>
    </panel>

    <panel level="floating" id="linearGradientPanel" noautohide="true">
      <hbox align="top">
        <groupbox>
          <caption label="&preview.caption;"/>
          <spacer flex="1"/>
          <vbox id="linearGradientPreview"/>
          <spacer flex="1"/>
        </groupbox>
        <tabbox id="linearGradientPropertiesTabbox">
          <tabs>
            <tab label="&colorStops.tab;"/>
            <tab label="&shapeAndSize.tab;" id="shapeAndSizeTab"/>
            <tab label="&angle.tab;"/>
            <tab label="&startingPoint.tab;"/>
          </tabs>
          <tabpanels>
            <vbox flex="1">
              <richlistbox id="colorStopsRichlistbox"
                           onselect="UpdateColorStopsRichlistbox()" flex="1"/>
              <hbox class="listboxBg">
                <toolbarbutton id="addColorStopButton" class="listboxBgPlusButton"
                               oncommand="AddColorStopToLinearGradient()"/>
                <toolbarbutton id="removeColorStopButton" class="listboxBgMinusButton"
                               disabled="true"
                               oncommand="DeleteColorStopFromLinearGradient()"/>
                <spacer flex="1"/>
                <toolbarbutton id="upColorStopButton" class="listboxBgPlusButton" disabled="true"/>
                <toolbarbutton id="downColorStopButton" class="listboxBgPlusButton" disabled="true"/>
              </hbox>
            </vbox>
            <grid id="shapeAndSizeTabpanel">
              <columns><column/><column/></columns>
              <rows>
                <row align="center">
	                <label value="&shape.label;"/>
	                <radiogroup id="radialGradientShape" orient="horizontal"
                              oncommand="RepaintGradient()">
	                  <radio label="&circularShape.label;" value="circle"/>
	                  <radio label="&ellipticShape.label;" value="ellipse"/>
	                </radiogroup>
                </row>
                <row align="center">
                  <label value="&size.label;"/>
                  <menulist id="radioGradientSize" sizetopopup="none"
                            oncommand="RepaintGradient()">
                    <menupopup>
                      <menuitem label="closest-side" value="closest-side"/>
                      <menuitem label="closest-corner" value="closest-corner"/>
                      <menuitem label="farthest-side" value="farthest-side"/>
                      <menuitem label="farthest-corner" value="farthest-corner"/>
                      <menuitem label="contain" value="contain"/>
                      <menuitem label="cover" value="cover"/>
                    </menupopup>
                  </menulist>
                </row>
              </rows>
            </grid>
            <hbox align="center" flex="1">
	            <checkbox label="&angle.checkbox;" id="linearGradientAngleCheckbox"
	                      oncommand="RepaintGradient()"/>
              <rotator id="linearGradientAngleRotator"
                       onchange="gDialog.linearGradientAngleCheckbox.checked=true;RepaintGradient()"
                       negated="true"/>
            </hbox>
		        <grid>
		          <columns><column/><column/></columns>
		          <rows>
		            <row align="center">
		              <checkbox label="&startingPoint.checkbox;" id="linearGradientStartingPointCheckbox"
                            oncommand="RepaintGradient()"/>
		              <hbox>
		                <menulist sizetopopup="none" editable="true" id="linearGradientStartingPointMenulist"
                              oncommand="RepaintGradient()">
		                  <menupopup>
		                    <grid class="multipane-menu"
		                              oncommand="this.parentNode.parentNode.value = event.originalTarget.value">
		                      <columns><column/><column/><column/></columns>
		                      <rows>
		                        <row align="center">
		                          <menuitem label="&backgroundPositionLeftTop.label;" value="left top"/>
		                          <menuitem label="&backgroundPositionCenterTop.label;" value="center top"/>
		                          <menuitem label="&backgroundPositionRightTop.label;" value="right top"/>
		                        </row>
		                        <row align="center">
		                          <menuitem label="&backgroundPositionLeftCenter.label;" value="left center"/>
		                          <menuitem label="&backgroundPositionCenterCenter.label;" value="center"/>
		                          <menuitem label="&backgroundPositionRightBottom.label;" value="right center"/>
		                        </row>
		                        <row align="center">
		                          <menuitem label="&backgroundPositionLeftBottom.label;" value="left bottom"/>
		                          <menuitem label="&backgroundPositionCenterBottom.label;" value="center bottom"/>
		                          <menuitem label="&backgroundPositionRightBottom.label;" value="right bottom"/>
		                        </row>
		                      </rows>
		                    </grid>
		                  </menupopup>
		                </menulist>
		              </hbox>
		            </row>
		            <row align="center">
		              <checkbox label="&horizOffset.checkbox;" id="linearGradientHorizOffsetCheckbox"
                            oncommand="RepaintGradient()"/>
		              <hbox>
		                <menulist editable="true" id="linearGradientHorizOffset" sizetopopup="none"
                              oncommand="onLengthMenulistCommand(this, '% px pt cm in mm pc em ex', '', true); RepaintGradient()"
		                          oninput="onLengthMenulistCommand(this, '% px pt cm in mm pc em ex', '', true); RepaintGradient()">
		                  <menupopup id="linearGradientHorizOffsetMenupopup"
		                             onpopupshowing="PopulateLengths(this, '% px pt cm in mm pc em ex')">
		                  </menupopup>
		                </menulist>
                    <spinbuttons onup="IncreaseLength(this, '% px pt cm in mm pc em ex'); RepaintGradient()"
                                 ondown="DecreaseLength(this, '% px pt cm in mm pc em ex', true); RepaintGradient()"/>
		                <checkbox label="&vertOffset.checkbox;" id="linearGradientVertOffsetCheckbox"
                              oncommand="RepaintGradient()"/>
		                <menulist editable="true" id="linearGradientVertOffset" sizetopopup="none"
		                          oncommand="onLengthMenulistCommand(this, '% px pt cm in mm pc em ex', '', true); RepaintGradient()"
		                          oninput="onLengthMenulistCommand(this, '% px pt cm in mm pc em ex', '', true); RepaintGradient()">
		                  <menupopup id="linearGradientVertOffsetMenupopup"
		                             onpopupshowing="PopulateLengths(this, '% px pt cm in mm pc em ex')">
		                  </menupopup>
		                </menulist>
                    <spinbuttons onup="IncreaseLength(this, '% px pt cm in mm pc em ex'); RepaintGradient()"
                                 ondown="DecreaseLength(this, '% px pt cm in mm pc em ex', true); RepaintGradient()"/>
		              </hbox>
		             </row>
		          </rows>
		        </grid>
          </tabpanels>
        </tabbox>
      </hbox>
      <hbox align="center">
        <spacer flex="1"/>
        <button label="&cancelButton.label;" oncommand="this.parentNode.parentNode.hidePopup();"/>
        <button label="&okButton.label;" id="linearGradientOkButton" oncommand="SetLinearGradient();"/>
      </hbox>
    </panel>
  </panelset>

  <vbox id="mainBox" flex="1" hidden="true">
  	<vbox id="mainBoxHeader">
	    <label id="currentElementBox"
	           crop="end"/>
	    <label value="&applyStyles.label;"/>
	    <hbox id="cssPolicyBox" align="center">
	      <menulist id="cssPolicyMenulist" oncommand="onCssPolicyChange(this)">
	        <menupopup>
	          <menuitem label="&modifyID.label;" value="id"/>
	          <menuitem label="&modifyClass.label;" value="class"/>
	          <menuseparator/>
			      <menuitem label="&useInlineStyles.label;" value="inline"/>
	        </menupopup>
	      </menulist>
	      <menulist id="classPicker" editable="true" hidden="true">
	        <menupopup id="classPickerPopup"/>
	      </menulist>
	      <textbox id="IDPicker" hidden="true"/>
	    </hbox>
  	</vbox>

    <vbox flex="1">
#include general.xul.inc
#include colors.xul.inc
#include geometry.xul.inc
#include position.xul.inc
#include borders.xul.inc
#include shadows.xul.inc
#include lists.xul.inc
#include transforms.xul.inc
#include transitions.xul.inc
#include flexbox.xul.inc
#include columns.xul.inc
    </vbox>
  </vbox>

</page>
