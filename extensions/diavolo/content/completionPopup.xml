<?xml version="1.0"?>


<bindings id="completionBindings"
          xmlns="http://www.mozilla.org/xbl"
          xmlns:html="http://www.w3.org/1999/xhtml"
          xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
          xmlns:xbl="http://www.mozilla.org/xbl">

  <binding id="popup">
    <content>
      <html:div anonid="ChoicePopup" style="z-index: 2; display: none; position: absolute; color: black; top: 1.2em"><html:select size="4" style="-moz-user-select: none !important;background-color: #e0e0e0; font-size: smaller" /></html:div>
      <children/>
    </content>
    <implementation>

      <field name="mSelectionSetter">null</field>
      <field name="mDiavoloCodeCompletionEngine">null</field>
      <field name="mVisible">false</field>

      <property name="mPopup">
        <getter>
        <![CDATA[
          return document.getAnonymousElementByAttribute(this, "anonid", "ChoicePopup");
        ]]>
        </getter>
      </property>
      
      <property name="isVisible">
        <getter>
        <![CDATA[
          return this.mVisible;
        ]]>
        </getter>
      </property>

      <property name="mChoices">
        <getter>
        <![CDATA[
          return this.mPopup.firstChild;
        ]]>
        </getter>
      </property>

      <method name="addChoice">
        <parameter name="name"/>
        <parameter name="parent"/>
        <body>
          <![CDATA[
            var choice = document.createElement("option");
            choice.innerHTML = name;
            choice.onclick = this.selectChoice;
            parent.appendChild(choice);
          ]]>
        </body>
      </method>

      <method name="hidePopup">
        <body>
          <![CDATA[
            var choices = this.mChoices;
            for (var j = choices.length - 1; j >= 0; j--)
              choices.remove(j);
            this.mPopup.style.display = "none";
            this.mVisible = false;
          ]]>
        </body>
      </method>

      <method name="selectChoice">
        <parameter name="event"/>
        <body>
          <![CDATA[
            var property = event.target.value;
            var boundElt = this.parentNode.parentNode.parentNode;
            //boundElt.innerHTML = property;

            if (boundElt.mSelectionSetter)
              boundElt.mSelectionSetter(boundElt.firstChild, property, boundElt.mDiavoloCodeCompletionEngine);
            boundElt.hidePopup();
            //boundElt.focus();
          ]]>
        </body>
      </method>
      <method name="showPopup">
        <parameter name="aSelectionSetter"/>
        <parameter name="aDiavoloCodeCompletionEngine"/>
        <body>
          <![CDATA[
            this.mSelectionSetter = aSelectionSetter;
            this.mDiavoloCodeCompletionEngine = aDiavoloCodeCompletionEngine;
            var x = 0
            var y = 15;
            var n = this;
            while (n)
            {
              x += n.offsetLeft;
              y += n.offsetTop;
              n  = n.offsetParent;
            }

            this.mPopup.style.setProperty("left", x + "px", "");
            this.mPopup.style.setProperty("top", y + "px", "");

            this.mPopup.style.display = "block";
            this.mVisible = true;
          ]]>
        </body>
      </method>
    </implementation>

  </binding>


</bindings>
